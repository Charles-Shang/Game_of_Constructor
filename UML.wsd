@startuml CS246 Final Project UML 
skinparam style strictuml
skinparam SequenceMessageAlignment center
skinparam classAttributeIconSize 0


class Board  {
    -tiles : std::vector<Tile>
    +InitBoard()
    +PrintBoard()
} 

enum TileType << enumerate >> {
    BRICK = 0
    ENERGY 
    GLASS 
    HEAT 
    WIFI 
    PARK
}

class Tile {
    - type : integer
    - tileNum : integer
    - tileValse : integer
    - hasGeese : boolean
    - theVertices : std::vector<Vertices>
    + InitTile()
} 
abstract class Observer {
    + {abstract} update()
    + {abstract} ~Observer()
}

abstract class Subject {
    - observers : std::vector<std::share_ptr<Observer>>
    + {abstract} attach (o : cons std::share_ptr<Observer>&)
    + {abstract} notifyObserver()
    + {abstract} ~Subject()
}

class Vertices {
    - location : integer
    - neighbourEdges : std::vector<std::share_ptr<Edge>> 
    - canBuildResidence : boolean
    - whichBuilder : integer
    + AddResidence()
    + UpdateAvailableResidence()
}

class Edge {
    - location : integer 
    - canBuildRoad : boolean
    - hasRoad : integer 
    - whichBuilder : integer 
    - neighbourResidence : std::vector<std::sharePoitner<Vertices>>
    + AddRoad()
    + updateAvailable() 
}

enum BuilderType << enumerate >> {
    BLUE = 0
    RED 
    ORANGE 
    YELLOW 
}

class Builder {
    - color : integer 
    - fairDice : boolean
    - builtLst : std::vector<Residence> 
    - resources : std::vector<int>
    + RollDice()
    + upgradeResidence(location : integer)
    + printStatus();
    + printResidence();
    + buildRoad(location : integer) 
    + buildResidence(location : integer)
    + calculatePoints()
}

enum ResidenceType << enumerate >> {
    BASEMENT = 0
    HOUSE
    TOWER  
}

class Residence {
    - level : integer 
    - buildingPoints : integer 
    + upgrade()
}

class Game {
    - thisBoard : Board 
    - builderLst : std::vector<Builder>
    + play()
}

Game *--> "1" Board
Game *--> Subject
Subject o--> "*" Observer : "observer"
Vertices --|> Subject 
Vertices --|> Observer 
Game *--> "4" Builder
Board *--> "19" Tile : {ordered}
Tile o--> "6" Edge
Tile o--> "6" Vertices
Builder *--> "0..*"Residence
BuilderType -- Builder 
TileType -- Tile 
ResidenceType -- Residence

@enduml