@startuml CS246 Final Project UML 
skinparam style strictuml
skinparam SequenceMessageAlignment center
skinparam classAttributeIconSize 0


class Board  {
    -tiles : std::vector<Tile>
    +InitBoard()
    +PrintBoard()
} 

enum TileType << enumeration >> {
    BRICK 
    ENERGY 
    GLASS 
    HEAT 
    WIFI 
    PARK
}

class Tile {
    - type : Integer
    - tileNum : Integer
    - tileValse : Integer
    - hasGeese : Boolean
    - theVertices : std::vector<Vertices>
    + InitTile()
} 
abstract class Observer {
    + {abstract} update()
    + {abstract} ~Observer()
}

abstract class Subject {
    - observers : std::vector<std::share_ptr<Observer>>
    + attach (o : const std::share_ptr<Observer>&)
    + {abstract} notifyObserver()
    + {abstract} ~Subject()
}

class Vertices {
    - location : Integer
    - neighbourEdges : std::vector<std::share_ptr<Edge>> 
    - canBuildResidence : Boolean
    - whichBuilder : Integer
    + addResidence()
    + updateAvailableResidence()
}

class Edge {
    - location : Integer 
    - canBuildRoad : Boolean
    - hasRoad : Integer 
    - whichBuilder : Integer 
    - neighbourResidence : std::vector<std::share_ptr<Vertices>>
    + addRoad()
    + updateAvailable() 
}

enum BuilderType << enumeration >> {
    BLUE 
    RED 
    ORANGE 
    YELLOW 
}

class Builder {
    - color : Integer 
    - fairDice : Boolean
    - builtLst : std::vector<Residence> 
    - resources : std::vector<int>
    + rollDice()
    + upgradeResidence(location : Integer)
    + printStatus()
    + printResidence()
    + buildRoad(location : Integer) 
    + buildResidence(location : Integer)
    + calculatePoints()
}

enum ResidenceType << enumeration >> {
    BASEMENT 
    HOUSE
    TOWER  
}

class Residence {
    - level : Integer 
    - buildingPoints : Integer 
    + upgrade()
}

class Game {
    - thisBoard : Board 
    - builderLst : std::vector<Builder>
    + play()
}

Game *--> "1" Board
Subject o--> "*" Observer : "observer"
Vertices --|> Subject 
Vertices --|> Observer 
Vertices o--> "2..3" Edge 
Edge o--> "2" Vertices
Game *--> "4" Builder
Board *--> "19" Tile : {ordered}
Tile o--> "6" Edge
Tile o--> "6" Vertices
Builder *--> "0..*"Residence
BuilderType -- Builder 
TileType -- Tile 
ResidenceType -- Residence

@enduml